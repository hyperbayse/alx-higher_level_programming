"""
Module: 4-print_square
Author: Sheriff Abdulfatai

Using ''print_square''

-------------------------------------------
>>> from 100-matrix_mul import matrix_mul

--------------------------------------------
# correct input
>>> matrix_mul([[3, 1, 2], [0, 2, 1], [1, 3, 2]], [[0, 1, 1], [2, 0 1], [1, 2, 0]])
[[4, 7, 4], [5, 2, 2], [8, 5, 4]]

# m_a is not a list
>>> matrix_mul('a', [[3, 1, 2], [0, 2, 1], [1, 3, 2]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

# m_b is not a list
>>> matrix_mul([[3, 1, 2], [0, 2, 1], [1, 3, 2]], 4)
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

# m_a is not a list of lists
>>> matrix_mul([[3, 1, 2], [0, 2, 1], 4], [[0, 1, 1], [2, 0 1], [1, 2, 0]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

# m_b is not a list of lists
>>> matrix_mul([[3, 1, 2], [0, 2, 1], [1, 3, 2]], ['c', [2, 0 1], [1, 2, 0]])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists

# m_a is empty
>>> matrix_mul([[]], [[0, 0, 0], [2, 0 1], [1, 2, 0]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

# m_b is empty
>>> matrix_mul([[3, 1, 2], [0, 2, 1], [1, 3, 2]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

# one element of m_a is not an int or float
>>> matrix_mul([[1, 0, 2], [3, t, 2], [0, 2, 1]], [[2, 1, 2], [3, 0, 2], [1, 3, 2]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

# one element of m_b is not an int or float
>>> matrix_mul([[1, 0, 2], [3, t, 2], [0, 2, 1]], [[2, 1, 2], [3, 0, 2], [1, 3, 2]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

# m_a is not a rectangle
>>> matrix_mul([[1, 0, 2], [3, 2, 2], [0, 1]], [[2, 1, 2], [3, 0, 2], [1, 3, 2]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

# m_b is not a rectangle
>>> matrix_mul([[1, 0, 2], [3, 2, 2], [0, 1, 1]], [[1, 2], [3, 0, 2], [1, 3, 2]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

# m_a rows != m_b columns
>>> matrix_mul([[1, 0, 2], [3, 2, 2], [0, 1]], [[2, 1, 2], [3, 0, 2], [1, 3, 2]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

"""